--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   17:24:29 04/09/2021
-- Design Name:   
-- Module Name:   D:/CAD Lab/votingmachine/vm3.vhd
-- Project Name:  votingmachine
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: votingm
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY vm3 IS
END vm3;
 
ARCHITECTURE behavior OF vm3 IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT votingm
    PORT(
         clk : IN  std_logic;
         reset : IN  std_logic;
         party1 : IN  std_logic;
         party2 : IN  std_logic;
         party3 : IN  std_logic;
         select_party : IN  std_logic;
         count1_op : OUT  std_logic_vector(5 downto 0);
         count2_op : OUT  std_logic_vector(5 downto 0);
         count3_op : OUT  std_logic_vector(5 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal clk : std_logic := '0';
   signal reset : std_logic := '0';
   signal party1 : std_logic := '0';
   signal party2 : std_logic := '0';
   signal party3 : std_logic := '0';
   signal select_party : std_logic := '0';

 	--Outputs
   signal count1_op : std_logic_vector(5 downto 0);
   signal count2_op : std_logic_vector(5 downto 0);
   signal count3_op : std_logic_vector(5 downto 0);

   -- Clock period definitions
   constant clk_period : time := 5 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: votingm PORT MAP (
          clk => clk,
          reset => reset,
          party1 => party1,
          party2 => party2,
          party3 => party3,
          select_party => select_party,
          count1_op => count1_op,
          count2_op => count2_op,
          count3_op => count3_op
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	

      wait for clk_period*10;
		reset<='1';
		wait for 10 ns;
		reset<='0';
		party1<='0';
		party2<='0';
		party3<='0';
		party1<='1';
		wait for 10 ns;
		party1<='0';
		wait for 10 ns;
		select_party<='1';
		wait for 10 ns;
		select_party<='0';
		wait for 10 ns;
		party1<='1';
		wait for 10 ns;
		party1<='0';
		wait for 10 ns;
		select_party<='1';
		wait for 10 ns;
		select_party<='0';
		wait for 10 ns;
		party1<='1';
		wait for 10 ns;
		party1<='0';
		wait for 10 ns;
		select_party<='1';
		wait for 10 ns;
		select_party<='0';
		wait for 10 ns;
		party2<='1';
		wait for 10 ns;
		party2<='0';
		wait for 10 ns;
		select_party<='1';
		wait for 10 ns;
		select_party<='0';
		wait for 10 ns;
		party3<='1';
		wait for 10 ns;
		party3<='0';
		wait for 10 ns;
		select_party<='1';
		wait for 10 ns;
		select_party<='0';
		wait for 10 ns;
		

      -- insert stimulus here 

      wait;
   end process;

END;
